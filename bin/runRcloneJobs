#!/usr/bin/env bash 

set -e 

trap 'ctrlC' INT
trap 'theEnd $?' EXIT

export NOTIFY_APP_NAME="RcloneJobs"

info() { printf "\n%s %s\n\n" "$( date )" "$*" >&2; }

ctrlC() {
    info 'Rclone jobs interrupted.'
    cliNotify "RClone jobs got interrupt signal!"

    exit 1
}

theEnd() {
    if [[ "$1" != "0" ]]; then
        cliNotify "Rclone jobs failed!"
    else
        cliNotify "Successfully ran rclone jobs"
    fi
}

if ! onAllowedNetworkForBackups; then
    cliNotify "Rclone Jobs Disabled - Not on Network Allowed For Backups"
    trap - INT EXIT
    exit 0
fi

beleyenvConfig="$HOME/.beleyenv/beleyenv/config.json"
localBeleyenvConfig="$HOME/.beleyenv/local.config.json"

mapfile -t rcloneJobs < <(
    jq -r '
        def get_jobs: if .rcloneJobs then .rcloneJobs else [] end;
        (input | get_jobs) + (get_jobs) | .[]?
    ' "$localBeleyenvConfig" "$beleyenvConfig"
)

if [[ ${#rcloneJobs[@]} = 0 ]]; then
    info '[WARN] No rclone jobs configured. Skipping'

    trap - INT EXIT
    exit 0
fi

(
    cd 

    index=0
    while [ "x${rcloneJobs[index]}" != "x" ]; do
        info "Running rclone ${rcloneJobs[index]}"
        eval "rclone --delete-before ${rcloneJobs[index]}"

        index=$(( index + 1 ))
    done
)
